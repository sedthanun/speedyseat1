package SpeedySeatsGUI;/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.*;
import com.formdev.flatlaf.themes.*;
import java.io.ByteArrayInputStream;
import javax.imageio.ImageIO;
import Payment.*;
import Theatre.*;
import Movie.*;

/**
 *
 * @author USER
 */

public class PaymentUI extends JFrame {  // for rollback 2

    /**
     * Creates new form PaymentUI
     */

//    public class onlinePaymentPanel extends javax.swing.JPanel {
//
//        /**
//         * Creates new form onlinePaymentPanel
//         */
//        public onlinePaymentPanel() {
//            initComponents();
//
//            cardNumber.setEchoChar('\0');
//            payButton.setVisible(false);
//        }
//
//        /**
//         * This method is called from within the constructor to initialize the form.
//         * WARNING: Do NOT modify this code. The content of this method is always
//         * regenerated by the Form Editor.
//         */
//        @SuppressWarnings("unchecked")
//        // <editor-fold defaultstate="collapsed" desc="Generated Code">
//        private void initComponents() {
//
//            cardHolderName = new javax.swing.JTextField();
//            jLabel1 = new javax.swing.JLabel();
//            jLabel2 = new javax.swing.JLabel();
//            jLabel3 = new javax.swing.JLabel();
//            jLabel4 = new javax.swing.JLabel();
//            expiryDate = new javax.swing.JTextField();
//            securityCode = new javax.swing.JTextField();
//            payButton = new javax.swing.JButton();
//            cardNumber = new javax.swing.JPasswordField();
//
//            setBackground(new java.awt.Color(35, 35, 35));
//            setMaximumSize(new java.awt.Dimension(747, 363));
//            setMinimumSize(new java.awt.Dimension(747, 363));
//            setPreferredSize(new java.awt.Dimension(747, 363));
//
//            cardHolderName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//
//            jLabel1.setBackground(new java.awt.Color(255, 255, 255));
//            jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            jLabel1.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel1.setText("Name on Card");
//
//            jLabel2.setBackground(new java.awt.Color(255, 255, 255));
//            jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            jLabel2.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel2.setText("Card Number");
//
//            jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            jLabel3.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel3.setText("Expiry Date");
//
//            jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            jLabel4.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel4.setText("Security Code");
//
//            expiryDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            expiryDate.addActionListener(new java.awt.event.ActionListener() {
//                public void actionPerformed(java.awt.event.ActionEvent evt) {
//                    expiryDateActionPerformed(evt);
//                }
//            });
//
//            securityCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//
//            payButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
//            payButton.setForeground(new java.awt.Color(255, 255, 255));
//            payButton.setText("Pay");
//            payButton.setActionCommand("Pay");
//            payButton.addActionListener(new java.awt.event.ActionListener() {
//                public void actionPerformed(java.awt.event.ActionEvent evt) {
//                    payButtonActionPerformed(evt);
//                }
//            });
//
//            cardNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//
//            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
//            this.setLayout(layout);
//            layout.setHorizontalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                    .addGap(197, 197, 197)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                            .addGroup(layout.createSequentialGroup()
//                                                    .addGap(101, 101, 101)
//                                                    .addComponent(payButton))
//                                            .addComponent(cardHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                            .addComponent(jLabel1)
//                                            .addGroup(layout.createSequentialGroup()
//                                                    .addGap(1, 1, 1)
//                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
//                                                            .addComponent(jLabel2)
//                                                            .addGroup(layout.createSequentialGroup()
//                                                                    .addComponent(jLabel3)
//                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                                    .addComponent(jLabel4))
//                                                            .addGroup(layout.createSequentialGroup()
//                                                                    .addComponent(expiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                                                    .addGap(18, 18, 18)
//                                                                    .addComponent(securityCode, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                                            .addComponent(cardNumber))))
//                                    .addContainerGap(250, Short.MAX_VALUE))
//            );
//            layout.setVerticalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                    .addGap(58, 58, 58)
//                                    .addComponent(jLabel1)
//                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                    .addComponent(cardHolderName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(14, 14, 14)
//                                    .addComponent(jLabel2)
//                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                    .addComponent(cardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(22, 22, 22)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                            .addComponent(jLabel3)
//                                            .addComponent(jLabel4))
//                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                                            .addComponent(expiryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                            .addComponent(securityCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
//                                    .addGap(27, 27, 27)
//                                    .addComponent(payButton)
//                                    .addContainerGap(59, Short.MAX_VALUE))
//            );
//        }// </editor-fold>
//
//        private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {
//            // TODO add your handling code here:
//        }
//
//        private void expiryDateActionPerformed(java.awt.event.ActionEvent evt) {
//            // TODO add your handling code here:
//        }
//
//        protected char[] getpassword() {
//            char[] password = cardNumber.getPassword();
//
//            return password;
//        }
//
//
//        // Variables declaration - do not modify
//        private javax.swing.JTextField cardHolderName;
//        private javax.swing.JPasswordField cardNumber;
//        private javax.swing.JTextField expiryDate;
//        private javax.swing.JLabel jLabel1;
//        private javax.swing.JLabel jLabel2;
//        private javax.swing.JLabel jLabel3;
//        private javax.swing.JLabel jLabel4;
//        private javax.swing.JButton payButton;
//        private javax.swing.JTextField securityCode;
//        // End of variables declaration
//    }

//    public class payAtCounterPanel extends javax.swing.JPanel {
//
//        /**
//         * Creates new form NewJPanel
//         */
//        public payAtCounterPanel() {
//            initComponents();
//
//            jLabel3.setVisible(false);
//        }
//
//        /**
//         * This method is called from within the constructor to initialize the form.
//         * WARNING: Do NOT modify this code. The content of this method is always
//         * regenerated by the Form Editor.
//         */
//        @SuppressWarnings("unchecked")
//        // <editor-fold defaultstate="collapsed" desc="Generated Code">
//        private void initComponents() {
//
//            jLabel2 = new javax.swing.JLabel();
//            jLabel3 = new javax.swing.JLabel();
//            roundedPanel1 = new RoundedPanel();
//            jLabel1 = new javax.swing.JLabel();
//
//            setBackground(new java.awt.Color(35, 35, 35));
//            setMaximumSize(new java.awt.Dimension(747, 363));
//            setMinimumSize(new java.awt.Dimension(747, 363));
//            setPreferredSize(new java.awt.Dimension(747, 363));
//
//            jLabel2.setBackground(new java.awt.Color(255, 255, 255));
//            jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
//            jLabel2.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel2.setText("You were served by Staff at counter.");
//
//            jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
//            jLabel3.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel3.setText("Price: 160 ฿");
//
//            roundedPanel1.setBackground(new java.awt.Color(255, 255, 255));
//            roundedPanel1.setMinimumSize(new java.awt.Dimension(1000, 1000));
//
//            jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/barcode.png"))); // NOI18N
//            jLabel1.setText("jLabel1");
//
//            javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
//            roundedPanel1.setLayout(roundedPanel1Layout);
//            roundedPanel1Layout.setHorizontalGroup(
//                    roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(roundedPanel1Layout.createSequentialGroup()
//                                    .addContainerGap()
//                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//            );
//            roundedPanel1Layout.setVerticalGroup(
//                    roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(roundedPanel1Layout.createSequentialGroup()
//                                    .addContainerGap()
//                                    .addComponent(jLabel1)
//                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//            );
//
//            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
//            this.setLayout(layout);
//            layout.setHorizontalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                    .addGap(228, 228, 228)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                            .addComponent(jLabel2)
//                                            .addGroup(layout.createSequentialGroup()
//                                                    .addGap(96, 96, 96)
//                                                    .addComponent(jLabel3)))
//                                    .addContainerGap(233, Short.MAX_VALUE))
//                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                    .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(252, 252, 252))
//            );
//            layout.setVerticalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                                    .addContainerGap(73, Short.MAX_VALUE)
//                                    .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(18, 18, 18)
//                                    .addComponent(jLabel2)
//                                    .addGap(28, 28, 28)
//                                    .addComponent(jLabel3)
//                                    .addGap(79, 79, 79))
//            );
//        }// </editor-fold>
//
//
//        // Variables declaration - do not modify
//        private javax.swing.JLabel jLabel1;
//        private javax.swing.JLabel jLabel2;
//        private javax.swing.JLabel jLabel3;
//        private RoundedPanel roundedPanel1;
//        // End of variables declaration
//    }

//    public class qrCodePanel extends javax.swing.JPanel {
//
//        /**
//         * Creates new form qrCodePanel
//         */
//        public qrCodePanel() {
//            initComponents();
//
//            price.setVisible(false);
//
//            LocalDateTime dateTime = LocalDateTime.now();
//
//            // เพิ่มเวลา 1 ชั่วโมง
//            LocalDateTime newDateTime = dateTime.plusHours(1);
//
//            // กำหนดรูปแบบการแสดงผลวันที่และเวลา
//            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
//
//            timer.setText("Valid until: " + newDateTime.format(formatter));
//        }
//
//        /**
//         * This method is called from within the constructor to initialize the form.
//         * WARNING: Do NOT modify this code. The content of this method is always
//         * regenerated by the Form Editor.
//         */
//        @SuppressWarnings("unchecked")
//        // <editor-fold defaultstate="collapsed" desc="Generated Code">
//        private void initComponents() {
//
//            price = new javax.swing.JLabel();
//            jLabel1 = new javax.swing.JLabel();
//            roundedPanel1 = new RoundedPanel();
//            roundedPanel2 = new RoundedPanel();
//            jLabel2 = new javax.swing.JLabel();
//            timer = new javax.swing.JLabel();
//
//            setBackground(new java.awt.Color(35, 35, 35));
//            setMaximumSize(new java.awt.Dimension(747, 363));
//            setMinimumSize(new java.awt.Dimension(747, 363));
//            setPreferredSize(new java.awt.Dimension(747, 363));
//
//            price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
//            price.setForeground(new java.awt.Color(255, 255, 255));
//            price.setText("Price: 160 ฿");
//
//            jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
//            jLabel1.setForeground(new java.awt.Color(255, 255, 255));
//            jLabel1.setText("QR Code");
//
//            roundedPanel1.setBackground(new java.awt.Color(0, 121, 253));
//            roundedPanel1.setPreferredSize(new java.awt.Dimension(700, 700));
//
//            roundedPanel2.setBackground(new java.awt.Color(255, 255, 255));
//            roundedPanel2.setPreferredSize(new java.awt.Dimension(600, 600));
//
//            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/qr_code_payment.png"))); // NOI18N
//            jLabel2.setText("jLabel2");
//
//            javax.swing.GroupLayout roundedPanel2Layout = new javax.swing.GroupLayout(roundedPanel2);
//            roundedPanel2.setLayout(roundedPanel2Layout);
//            roundedPanel2Layout.setHorizontalGroup(
//                    roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(roundedPanel2Layout.createSequentialGroup()
//                                    .addGap(20, 20, 20)
//                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addContainerGap(24, Short.MAX_VALUE))
//            );
//            roundedPanel2Layout.setVerticalGroup(
//                    roundedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(roundedPanel2Layout.createSequentialGroup()
//                                    .addGap(18, 18, 18)
//                                    .addComponent(jLabel2)
//                                    .addContainerGap(20, Short.MAX_VALUE))
//            );
//
//            javax.swing.GroupLayout roundedPanel1Layout = new javax.swing.GroupLayout(roundedPanel1);
//            roundedPanel1.setLayout(roundedPanel1Layout);
//            roundedPanel1Layout.setHorizontalGroup(
//                    roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel1Layout.createSequentialGroup()
//                                    .addContainerGap(22, Short.MAX_VALUE)
//                                    .addComponent(roundedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(21, 21, 21))
//            );
//            roundedPanel1Layout.setVerticalGroup(
//                    roundedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roundedPanel1Layout.createSequentialGroup()
//                                    .addContainerGap(17, Short.MAX_VALUE)
//                                    .addComponent(roundedPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(16, 16, 16))
//            );
//
//            timer.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
//            timer.setForeground(new java.awt.Color(153, 204, 255));
//            timer.setText("Valid until: 23:59 16 October 2024");
//
//            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
//            this.setLayout(layout);
//            layout.setHorizontalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                                    .addContainerGap(120, Short.MAX_VALUE)
//                                    .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                    .addGap(46, 46, 46)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                            .addComponent(jLabel1)
//                                            .addComponent(price)
//                                            .addComponent(timer))
//                                    .addGap(81, 81, 81))
//            );
//            layout.setVerticalGroup(
//                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                    .addGap(40, 40, 40)
//                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                                            .addGroup(layout.createSequentialGroup()
//                                                    .addComponent(roundedPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
//                                                    .addContainerGap(52, Short.MAX_VALUE))
//                                            .addGroup(layout.createSequentialGroup()
//                                                    .addGap(20, 20, 20)
//                                                    .addComponent(jLabel1)
//                                                    .addGap(35, 35, 35)
//                                                    .addComponent(timer)
//                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
//                                                    .addComponent(price)
//                                                    .addGap(78, 78, 78))))
//            );
//        }// </editor-fold>
//
//
//        // Variables declaration - do not modify
//        private javax.swing.JLabel jLabel1;
//        private javax.swing.JLabel jLabel2;
//        private javax.swing.JLabel price;
//        private RoundedPanel roundedPanel1;
//        private RoundedPanel roundedPanel2;
//        private javax.swing.JLabel timer;
//        // End of variables declaration
//    }
    public PaymentUI() {
        initComponents();

        setTitle("SpeedySeat");

        payment = new Payment();

        qrCodePanel = (PayByQR) payment.getPaymentMethod("payByQR");
        onlinePaymentPanel = (PayByBanking) payment.getPaymentMethod("payByBanking");
        payAtCounterPanel = (PayByCash) payment.getPaymentMethod("payByCash");

        cardLayout = new CardLayout();

        mainPanel = new JPanel(cardLayout);

        mainPanel.add(qrCodePanel, "QRCode");
        mainPanel.add(onlinePaymentPanel, "OnlineBanking");
        mainPanel.add(payAtCounterPanel, "Cash");

        methodPanel.add(mainPanel, BorderLayout.CENTER);

        qrCode.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        onlineBanking.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        payAtCounter.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));

        qrCode.setOpaque(true);
        qrCode.setBackground(new Color(65,65,65));
        currentCard = "QRCode";

        setLocationRelativeTo(null);
        setResizable(false);

        totalPrice = 0;

//        ImageIcon icon = new ImageIcon(getClass().getResource("/Icon/Icon_App_Test.png")); // เปลี่ยน path_to_your_icon.png เป็นที่อยู่ของไอคอน
//        setIconImage(icon.getImage());
    }

    public PaymentUI(Showtime showtime, Movie movie, ArrayList<String> selectedSeats, int totalPrice) {
        this();

        this.showtime = showtime;
        this.movie = movie;
        this.selectedSeats = selectedSeats;
        this.totalPrice = totalPrice;

        byte[] moviePoster = (byte[]) movie.getMovieInfo().get("moviePoster");
        try {
            // แปลง byte[] เป็น Image
            ByteArrayInputStream bais = new ByteArrayInputStream(moviePoster);
            Image originalImage = ImageIO.read(bais);

            // ตรวจสอบว่า Image ถูกโหลดสำเร็จหรือไม่
            if (originalImage != null) {
                // ปรับขนาดของภาพ
                Image resizedImage = originalImage.getScaledInstance(200, 300, Image.SCALE_SMOOTH);

                // ตั้งค่า Icon ให้กับ JLabel
                jLabel1.setIcon(new ImageIcon(resizedImage));
            } else {
                System.out.println("ไม่สามารถโหลดภาพได้");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

//        jLabel1.setIcon(new ImageIcon(resizedImage));

        dateShowtime.setText("" + this.showtime.getShowtimeInfo().get("showtimeDateTime"));
        movieName.setText("" + this.movie.getMovieInfo().get("movieName"));
        movieGenre.setText("" + this.movie.getMovieInfo().get("movieGenre"));
        runtime.setText(this.movie.getMovieInfo().get("movieRuntime") + " min");
        theatre.setText("Theatre " + ((Theatre) showtime.getShowtimeInfo().get("theatre")).getTheatreInfo().get("theatreNumber") + " | " + ((Theatre) showtime.getShowtimeInfo().get("theatre")).getTheatreInfo().get("theatreBranch"));
        sound.setText("" + this.showtime.getShowtimeInfo().get("sound"));
        subtitle.setText("" + this.showtime.getShowtimeInfo().get("subtitle"));
        jLabel5.setText("" + this.showtime.getShowtimeInfo().get("screenFormat"));
        seat.setText(String.join(", ", this.selectedSeats));
        price.setText("Price: " + String.valueOf(this.totalPrice) + " ฿");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel = new JPanel();
        jPanel1 = new JPanel();
        roundedPanel1 = new RoundedPanel();
        jLabel1 = new JLabel();
        dateShowtime = new JLabel();
        movieName = new JLabel();
        movieGenre = new JLabel();
        runtime = new JLabel();
        theatre = new JLabel();
        sound = new JLabel();
        subtitle = new JLabel();
        jLabel3 = new JLabel();
        seat = new JLabel();
        price = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        roundedPanel2 = new RoundedPanel();
        qrCode = new JLabel();
        onlineBanking = new JLabel();
        payAtCounter = new JLabel();
        methodPanel = new RoundedPanel();
        roundedPanel3 = new RoundedPanel();
        roundedPanel4 = new RoundedPanel();
        pay = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

//        jPanel1.setBackground(new java.awt.Color(30, 30, 30));

        roundedPanel1.setBackground(new Color(35, 35, 35));
        roundedPanel1.setPreferredSize(new Dimension(1162, 327));

        URL imgURL = getClass().getResource("/Icon/Test_Poster.jpg");
        if (imgURL != null) {
            jLabel1.setIcon(new ImageIcon(imgURL));
        } else {
            System.err.println("Image not found: " + "/Icon/Test_Poster.jpg");
        }

        try {
            jLabel1.setIcon(new ImageIcon(getClass().getResource("/Icon/Test_Poster.jpg")));
        } catch (NullPointerException e) {
            System.err.println("Image not found: " + e.getMessage());
        }


        jLabel1.setIcon(new ImageIcon(getClass().getResource("/Icon/Test_Poster.jpg")));// C:\Users\USER\Desktop\ISAD\speedyseat1\test\src\main\Icon
        jLabel1.setText("jLabel1");

        dateShowtime.setFont(new Font("Segue UI", 0, 14)); // NOI18N
        dateShowtime.setForeground(new Color(153, 204, 255));
        dateShowtime.setText("31 August 2024   |  18:00");

        movieName.setFont(new Font("Segoe UI", 1, 24)); // NOI18N
        movieName.setForeground(new Color(255, 255, 255));
        movieName.setText("Dandadan");

        movieGenre.setBackground(new Color(255, 255, 255));
        movieGenre.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        movieGenre.setForeground(new Color(255, 255, 255));
        movieGenre.setText("Action, Adventure, Animation, Comedy, Romance, Science Fiction");

        runtime.setForeground(new Color(255, 255, 255));
        runtime.setText("83 min");

        theatre.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        theatre.setForeground(new Color(255, 255, 255));
        theatre.setText("Theatre 7");

        sound.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        sound.setForeground(new Color(255, 255, 255));
        sound.setIcon(new ImageIcon(getClass().getResource("/Icon/sound.png"))); // NOI18N
        sound.setText("ENG");

        subtitle.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        subtitle.setForeground(new Color(255, 255, 255));
        subtitle.setIcon(new ImageIcon(getClass().getResource("/Icon/subtitle.png"))); // NOI18N
        subtitle.setText("TH");

        jLabel3.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("|");

        seat.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        seat.setForeground(new Color(255, 255, 255));
        seat.setIcon(new ImageIcon(getClass().getResource("/Icon/seat.png"))); // NOI18N
        seat.setText("M7");

        price.setFont(new Font("Segoe UI", 1, 14)); // NOI18N
        price.setForeground(new Color(255, 255, 255));
        price.setText("Price: 160 ฿");

        jLabel4.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("|");

        jLabel5.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new Color(255, 255, 255));
        jLabel5.setIcon(new ImageIcon(getClass().getResource("/Icon/display.png"))); // NOI18N
        jLabel5.setText("IMAX");

        GroupLayout roundedPanel1Layout = new GroupLayout(roundedPanel1);
        roundedPanel1.setLayout(roundedPanel1Layout);
        roundedPanel1Layout.setHorizontalGroup(
                roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 199, GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(dateShowtime)
                                                        .addComponent(movieName)
                                                        .addComponent(movieGenre)
                                                        .addComponent(runtime)
                                                        .addComponent(theatre)
                                                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                                                .addComponent(sound)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jLabel3)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(subtitle)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel4)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jLabel5)))
                                                .addContainerGap(229, Short.MAX_VALUE))
                                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                                .addComponent(seat)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(price)
                                                .addGap(74, 74, 74))))
        );
        roundedPanel1Layout.setVerticalGroup(
                roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(roundedPanel1Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(dateShowtime)
                                                .addGap(18, 18, 18)
                                                .addComponent(movieName)
                                                .addGap(18, 18, 18)
                                                .addComponent(movieGenre)
                                                .addGap(18, 18, 18)
                                                .addComponent(runtime)
                                                .addGap(18, 18, 18)
                                                .addComponent(theatre)
                                                .addGap(18, 18, 18)
                                                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(sound)
                                                        .addComponent(subtitle)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel5))
                                                .addGap(18, 18, 18)
                                                .addGroup(roundedPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(seat)
                                                        .addComponent(price))))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        roundedPanel2.setBackground(new Color(35, 35, 35));
        roundedPanel2.setPreferredSize(new Dimension(200, 200));

        qrCode.setBackground(new Color(102, 102, 102));
        qrCode.setFont(new Font("Segoe UI", 0, 24)); // NOI18N
        qrCode.setForeground(new Color(255, 255, 255));
        qrCode.setIcon(new ImageIcon(getClass().getResource("/Icon/qr-code.png"))); // NOI18N
        qrCode.setText("QR Code");
        qrCode.setIconTextGap(30);
        qrCode.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                qrCodeMouseClicked(evt);
            }
            public void mouseExited(MouseEvent evt) {
                qrCodeMouseExited(evt);
            }
            public void mousePressed(MouseEvent evt) {
                qrCodeMousePressed(evt);
            }
        });

        onlineBanking.setFont(new Font("Segoe UI", 0, 24)); // NOI18N
        onlineBanking.setForeground(new Color(255, 255, 255));
        onlineBanking.setIcon(new ImageIcon(getClass().getResource("/Icon/banking.png"))); // NOI18N
        onlineBanking.setText("Online Banking");
        onlineBanking.setIconTextGap(30);
        onlineBanking.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                onlineBankingMouseClicked(evt);
            }
        });

        payAtCounter.setFont(new Font("Segoe UI", 0, 24)); // NOI18N
        payAtCounter.setForeground(new Color(255, 255, 255));
        payAtCounter.setIcon(new ImageIcon(getClass().getResource("/Icon/counter.png"))); // NOI18N
        payAtCounter.setText("Pay at Counter");
        payAtCounter.setIconTextGap(30);
        payAtCounter.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                payAtCounterMouseClicked(evt);
            }
        });

        GroupLayout roundedPanel2Layout = new GroupLayout(roundedPanel2);
        roundedPanel2.setLayout(roundedPanel2Layout);
        roundedPanel2Layout.setHorizontalGroup(
                roundedPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, roundedPanel2Layout.createSequentialGroup()
                                .addContainerGap(57, Short.MAX_VALUE)
                                .addGroup(roundedPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(onlineBanking, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(qrCode, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(payAtCounter, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 307, GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54))
        );
        roundedPanel2Layout.setVerticalGroup(
                roundedPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel2Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(qrCode)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(onlineBanking)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(payAtCounter, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(17, Short.MAX_VALUE))
        );

        methodPanel.setBackground(new Color(35, 35, 35));
        methodPanel.setMinimumSize(new Dimension(300, 700));
        methodPanel.setPreferredSize(new Dimension(300, 700));
        methodPanel.setLayout(new BorderLayout());

        roundedPanel3.setBackground(new Color(35, 35, 35));

        GroupLayout roundedPanel3Layout = new GroupLayout(roundedPanel3);
        roundedPanel3.setLayout(roundedPanel3Layout);
        roundedPanel3Layout.setHorizontalGroup(
                roundedPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 200, Short.MAX_VALUE)
        );
        roundedPanel3Layout.setVerticalGroup(
                roundedPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 363, Short.MAX_VALUE)
        );

        methodPanel.add(roundedPanel3, BorderLayout.LINE_START);

        roundedPanel4.setBackground(new Color(35, 35, 35));

        pay.setFont(new Font("Segoe UI", 0, 14)); // NOI18N
        pay.setText("Pay");
        pay.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                payActionPerformed(evt);
            }
        });

        GroupLayout roundedPanel4Layout = new GroupLayout(roundedPanel4);
        roundedPanel4.setLayout(roundedPanel4Layout);
        roundedPanel4Layout.setHorizontalGroup(
                roundedPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel4Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(pay)
                                .addContainerGap(112, Short.MAX_VALUE))
        );
        roundedPanel4Layout.setVerticalGroup(
                roundedPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(roundedPanel4Layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(pay)
                                .addContainerGap(178, Short.MAX_VALUE))
        );

        methodPanel.add(roundedPanel4, BorderLayout.LINE_END);

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(roundedPanel1, GroupLayout.PREFERRED_SIZE, 711, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(roundedPanel2, GroupLayout.PREFERRED_SIZE, 418, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(methodPanel, GroupLayout.PREFERRED_SIZE, 1147, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(roundedPanel1, GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                                        .addComponent(roundedPanel2, GroupLayout.PREFERRED_SIZE, 364, GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(methodPanel, GroupLayout.PREFERRED_SIZE, 363, Short.MAX_VALUE)
                                .addGap(32, 32, 32))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void qrCodeMousePressed(MouseEvent evt) {
        // TODO add your handling code here:

    }

    private void qrCodeMouseExited(MouseEvent evt) {
        // TODO add your handling code here:

    }

    private void qrCodeMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
        qrCode.setOpaque(true);
        qrCode.setBackground(new Color(65, 65, 65));

        onlineBanking.setOpaque(true);
        onlineBanking.setBackground(new Color(35, 35, 35));

        payAtCounter.setOpaque(true);
        payAtCounter.setBackground(new Color(35, 35, 35));

        cardLayout.show(mainPanel, "QRCode");
        currentCard = "QRCode";
    }

    private void onlineBankingMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
        onlineBanking.setOpaque(true);
        onlineBanking.setBackground(new Color(65,65,65));

        qrCode.setOpaque(true);
        qrCode.setBackground(new Color(35, 35, 35));

        payAtCounter.setOpaque(true);
        payAtCounter.setBackground(new Color(35, 35, 35));

        cardLayout.show(mainPanel, "OnlineBanking");
        currentCard = "OnlineBanking";
    }

    private void payAtCounterMouseClicked(MouseEvent evt) {
        // TODO add your handling code here:
        payAtCounter.setOpaque(true);
        payAtCounter.setBackground(new Color(65,65,65));

        qrCode.setOpaque(true);
        qrCode.setBackground(new Color(35, 35, 35));

        onlineBanking.setOpaque(true);
        onlineBanking.setBackground(new Color(35, 35, 35));

        cardLayout.show(mainPanel, "Cash");
        currentCard = "Cash";
    }

    private void payActionPerformed(ActionEvent evt) {
        // ดึงข้อความจาก JPasswordField
        char[] password = onlinePaymentPanel.getpassword();

        // ตรวจสอบว่ารหัสผ่านมีจำนวนไม่เท่ากับ 10 ตัวอักษร
        if (currentCard == "OnlineBanking") {
            if (password.length < 1) {
                // แสดงแจ้งเตือนว่าต้องใช้รหัสผ่าน 10 ตัวอักษร
                JOptionPane.showMessageDialog(this, "Please enter your card number.", "Payment failed", JOptionPane.WARNING_MESSAGE);
            } else if (password.length >= 1 && password.length != 10) {
                // แสดงแจ้งเตือนว่าต้องใช้รหัสผ่าน 10 ตัวอักษร
                JOptionPane.showMessageDialog(this, "Wrong card number.", "Payment failed", JOptionPane.WARNING_MESSAGE);
            } else {
                // โค้ดอื่น ๆ สำหรับการดำเนินการหลังจากป้อนรหัสผ่านถูกต้อง
                LocalDateTime dateTime = LocalDateTime.now();
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                String payDate = dateTime.format(formatter);

                new TicketUI().setVisible(true);

                new Payment(movie, showtime, selectedSeats, currentCard, totalPrice, payDate);

                System.out.println("Confirm");
            }
        } else {
            LocalDateTime dateTime = LocalDateTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String payDate = dateTime.format(formatter);

            new Payment(movie, showtime, selectedSeats, currentCard, totalPrice, payDate);

            System.out.println("Confirm");
        }
    }

    private String getCurrentCard() {
        return currentCard;
    }

    /**
     * @param args the command line arguments
     */

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(new FlatMacDarkLaf());
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PaymentUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel dateShowtime;
    private JLabel jLabel1;
    private JLabel price;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JPanel jPanel;
    private JPanel jPanel1;
    private RoundedPanel methodPanel;
    private JLabel movieGenre;
    private JLabel movieName;
    private JLabel onlineBanking;
    private JLabel payAtCounter;
    private JLabel qrCode;
    private RoundedPanel roundedPanel1;
    private RoundedPanel roundedPanel2;
    private RoundedPanel roundedPanel3;
    private RoundedPanel roundedPanel4;
    private JLabel runtime;
    private JLabel seat;
    private JLabel sound;
    private JLabel subtitle;
    private JLabel theatre;
    // End of variables declaration

    private CardLayout cardLayout;
    private PayByQR qrCodePanel;
    private PayByBanking onlinePaymentPanel;
    private PayByCash payAtCounterPanel;
    private JPanel mainPanel;
    private JButton pay;
    private String currentCard;

    private Payment payment;
    private Movie movie;
    private Showtime showtime;
    private ArrayList<String> selectedSeats;
    private int totalPrice;
}
